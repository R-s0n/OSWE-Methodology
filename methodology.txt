        ***************
        * OSWE - EXAM *
        * ----------- *
        * Methodology *
        ***************

================================
|  TAKE   A   *DEEP*   BREATH  |
================================
|        Slow is Smooth        |
|            ------            |
|        Smooth is Fast        |
================================


NMAP

Scan ( sudo nmap -sT -A -T4 -p- -Pn -O [SERVER_IP] )
    ~ IP Address -
    ~ Machine Name - 
    ~ Operating System - 
    ~ Open Ports - 


HIGH-LEVEL

Language -
Framework -
Database - 
Webserver - 
What does the application do?
- 


BEFORE TESTING

Find web root -
Turn on database logging
    ~ Locate config file -
    ~ Modify config file -
    ~ Restart service -
    ~ Locate log file -
    ~ Confirm logging -
Turn on web logging
    ~ Locate config file -
    ~ Modify config file -
    ~ Restart service -
    ~ Locate log file -
    ~ Confirm logging -
Enable debugging - 
Additional logging (if possible) - 


NIKTO

Scan ( nikto -host [URL] )
    ~ 


BLACK BOX

JavaScript
    ~ Third-party Libraries -
    ~ Custom JS Files -
What features can you find from the BROWSER?
    ~ Login -
    ~ Register -
    ~ Password Reset - 
    ~ Search -
    ~ File Upload - 
    ~ Stored Content (Online Notes) - 
    ~ Plugins - 
What features can you find from BURP?
    ~ API - 
    ~ Admin Panel - 
    ~ New Directories/Pages -
    ~ Websocket - 


FFUF

Scan ( ./home/rs0n/go/bin/ffuf -w /usr/share/dirb/wordlists/big.txt -u [URL] -replay-proxy http://127.0.0.1:8080 -recursion -recursion-depth 3 )
    ~ 


WHITE BOX

Objects - 
Routing - 
Templating - 
Auth vs Unauth Pages (Code) -
SQL Queries - 
DB Creds - 


AUTHENTICATION

Session cookies/tokens -
Cookies encoded or serialized -
Password resets -
How are users created -
Password Hashed in DB - 
Access Control Roles - 
Auth vs Unauth Pages (Behavior) - 
Difference between admin and non-admin pages - 


===============================
|   AVOID  *RABBIT*  HOLES!   |
===============================
|       Stuck 2+ Hours        |
|           ------            |
|     Fifteen Minute Break    |
|    And Change Vulnerabily   |
===============================


AUTH BYPASS

Predictable token generation (java.util.Random) -
Type Juggling ( == ) -
SQLi in login methods -
Access authenticated / admin pages without authorization - 
Anything interesting when accessing nonexistent page -
Cookies used instead of session - 
Change user details (email) - 


SQL INJECTION

User controlled parameters -
Sanitization -
Escapable quotes -
Enumeration or run code -
If Found:
    Version - 
    Stacked queries - 
    User/password tables - 
    Type of query - 
    Copy to - 
    UDF - 
    Large Objects - 
    Execute shell commands - 
    Creds - 
    Logging - 


XSS

Injectable fields -
Alert box -
Steal cookie -
CSRF -


FILE UPLOAD

Blacklists -
Mime type -
Where are files stored -


DESERIALIZATION

Anything serialized or deserialized after authentication -
Cookies -
Files -
JSON -
Pickle -
Base64 encoded -


CODE INJECTION

User controlled parameters -
Ability to inject PHP, JS, etc -


XXE

Is XML being used -
User controlled parameters -
Local entities -
External Entities -
Disclose known files (/etc/passwd, C -\windows\win.ini) -
RCE capable -


SSTI

Template version -
Blacklists -
Useful Subclasses - 
Run code -


===============================
|   AVOID  *RABBIT*  HOLES!   |
===============================
|       Stuck 2+ Hours        |
|           ------            |
|     Fifteen Minute Break    |
|    And Change Vulnerabily   |
===============================


POINTERS

File - 
Type - 
Notes - 


VULNERABILITIES DISCOVERED

Type -
PoC -


REVERSE SHELL

Bash -
nodeJS -
PHP -
Python - 
Powershell -
Msfvenom - 
